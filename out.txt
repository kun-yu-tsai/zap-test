Hosts: public-firing-range.appspot.com, public-firing-range.appspot.com
Alerts: 
[{'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '0',
  'messageId': '4',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '1',
  'messageId': '4',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '2',
  'messageId': '4',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '3',
  'messageId': '25',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '4',
  'messageId': '25',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '5',
  'messageId': '25',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '6',
  'messageId': '56',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '7',
  'messageId': '56',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '8',
  'messageId': '56',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '9',
  'messageId': '78',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/badscriptimport/index.html',
  'wascid': '13'},
 {'alert': 'Private IP Disclosure',
  'alertRef': '2',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '200',
  'description': 'A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or '
                 'an Amazon EC2 private hostname (for example, ip-10-0-56-78) '
                 'has been found in the HTTP response body. This information '
                 'might be helpful for further attacks targeting internal '
                 'systems.',
  'evidence': '192.168.1.2',
  'id': '10',
  'messageId': '78',
  'method': 'GET',
  'name': 'Private IP Disclosure',
  'other': '192.168.1.2\n192.168.1.2\n',
  'param': '',
  'pluginId': '2',
  'reference': 'https://tools.ietf.org/html/rfc1918',
  'risk': 'Low',
  'solution': 'Remove the private IP address from the HTTP response body.  For '
              'comments, use JSP/ASP/PHP comment instead of HTML/JavaScript '
              'comment which can be seen by client browsers.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/badscriptimport/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '11',
  'messageId': '78',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/badscriptimport/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '12',
  'messageId': '78',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/badscriptimport/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '13',
  'messageId': '83',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/cors/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '14',
  'messageId': '83',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/cors/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '15',
  'messageId': '83',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/cors/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '16',
  'messageId': '88',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '17',
  'messageId': '88',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '18',
  'messageId': '88',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '19',
  'messageId': '134',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '20',
  'messageId': '134',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '21',
  'messageId': '134',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '22',
  'messageId': '181',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/flashinjection/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '23',
  'messageId': '181',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/flashinjection/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '24',
  'messageId': '181',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/flashinjection/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '25',
  'messageId': '185',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/mixedcontent/index.html',
  'wascid': '13'},
 {'alert': 'Secure Pages Include Mixed Content (Including Scripts)',
  'alertRef': '10040',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '311',
  'description': 'The page includes mixed content, that is content accessed '
                 'via HTTP instead of HTTPS.',
  'evidence': 'http://public-firing-range.appspot.com/mixedcontent/script.js',
  'id': '26',
  'messageId': '185',
  'method': 'GET',
  'name': 'Secure Pages Include Mixed Content (Including Scripts)',
  'other': 'tag=script '
           'src=http://public-firing-range.appspot.com/mixedcontent/script.js\n',
  'param': '',
  'pluginId': '10040',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html',
  'risk': 'Medium',
  'solution': 'A page that is available over SSL/TLS must be comprised '
              'completely of content which is transmitted over SSL/TLS.\n'
              'The page must not contain any content that is transmitted over '
              'unencrypted HTTP.\n'
              ' This includes content from third party sites.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/mixedcontent/index.html',
  'wascid': '4'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '27',
  'messageId': '185',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/mixedcontent/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '28',
  'messageId': '185',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/mixedcontent/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '29',
  'messageId': '188',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/redirect/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '30',
  'messageId': '188',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/redirect/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '31',
  'messageId': '188',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/redirect/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '32',
  'messageId': '193',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '33',
  'messageId': '193',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '34',
  'messageId': '193',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '35',
  'messageId': '243',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '36',
  'messageId': '243',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '37',
  'messageId': '243',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '38',
  'messageId': '250',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '39',
  'messageId': '250',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '40',
  'messageId': '250',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '41',
  'messageId': '264',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/tags/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '42',
  'messageId': '264',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/tags/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '43',
  'messageId': '264',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/tags/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '44',
  'messageId': '279',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '45',
  'messageId': '279',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '46',
  'messageId': '279',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '47',
  'messageId': '310',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '48',
  'messageId': '310',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '49',
  'messageId': '310',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '50',
  'messageId': '314',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/vulnerablelibraries/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '51',
  'messageId': '314',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/vulnerablelibraries/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '52',
  'messageId': '314',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/vulnerablelibraries/index.html',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '53',
  'messageId': '317',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/index.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '54',
  'messageId': '317',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/index.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '55',
  'messageId': '317',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/index.html',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '56',
  'messageId': '326',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/assign',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '57',
  'messageId': '326',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/assign',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '58',
  'messageId': '328',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/documentwriteln',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '59',
  'messageId': '328',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/documentwriteln',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '60',
  'messageId': '329',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '61',
  'messageId': '329',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '62',
  'messageId': '330',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '63',
  'messageId': '330',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '64',
  'messageId': '331',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '65',
  'messageId': '331',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '66',
  'messageId': '332',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/rangeCreateContextualFragment',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '67',
  'messageId': '332',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/rangeCreateContextualFragment',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '68',
  'messageId': '333',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/replace',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '69',
  'messageId': '333',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/replace',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '70',
  'messageId': '334',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/setTimeout',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '71',
  'messageId': '334',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/setTimeout',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '72',
  'messageId': '335',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/function',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '73',
  'messageId': '335',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/function',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '74',
  'messageId': '336',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/onclickSetAttribute',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '75',
  'messageId': '336',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/onclickSetAttribute',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '76',
  'messageId': '337',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/onclickAddEventListener',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '77',
  'messageId': '337',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/onclickAddEventListener',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '78',
  'messageId': '338',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/jshref',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '79',
  'messageId': '338',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/jshref',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '80',
  'messageId': '339',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/inlineevent',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '81',
  'messageId': '339',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/inlineevent',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '82',
  'messageId': '340',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/formaction',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '83',
  'messageId': '340',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location.hash/formaction',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '84',
  'messageId': '341',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/assign',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '85',
  'messageId': '341',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/assign',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '86',
  'messageId': '343',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '87',
  'messageId': '343',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '88',
  'messageId': '344',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/documentwriteln',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '89',
  'messageId': '344',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/documentwriteln',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '90',
  'messageId': '345',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '91',
  'messageId': '345',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '92',
  'messageId': '346',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '93',
  'messageId': '346',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '94',
  'messageId': '347',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/rangeCreateContextualFragment',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '95',
  'messageId': '347',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/rangeCreateContextualFragment',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '96',
  'messageId': '348',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/replace',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '97',
  'messageId': '348',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/replace',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '98',
  'messageId': '349',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/documentURI/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '99',
  'messageId': '349',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/documentURI/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '100',
  'messageId': '350',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/setTimeout',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '101',
  'messageId': '350',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/location/setTimeout',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '102',
  'messageId': '352',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/baseURI/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '103',
  'messageId': '352',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/baseURI/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '104',
  'messageId': '354',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/locationhref/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '105',
  'messageId': '354',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/locationhref/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '106',
  'messageId': '356',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/locationpathname/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '107',
  'messageId': '356',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/locationpathname/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '108',
  'messageId': '358',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/locationsearch/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '109',
  'messageId': '358',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/locationsearch/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '110',
  'messageId': '360',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/URL/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '111',
  'messageId': '360',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/URL/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '112',
  'messageId': '362',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/URLUnencoded/documentwrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '113',
  'messageId': '362',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/address/URLUnencoded/documentwrite',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.5/angular.js"></script>',
  'id': '114',
  'messageId': '364',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.1.5/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.1.5?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '115',
  'messageId': '364',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.1.5?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '116',
  'messageId': '364',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.1.5?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.0/angular.js"></script>',
  'id': '117',
  'messageId': '365',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.2.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '118',
  'messageId': '365',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '119',
  'messageId': '365',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.0?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.18/angular.js"></script>',
  'id': '120',
  'messageId': '367',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.2.18/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.18?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '121',
  'messageId': '367',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.18?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '122',
  'messageId': '367',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.18?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.js"></script>',
  'id': '123',
  'messageId': '368',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.19?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '124',
  'messageId': '368',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.19?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '125',
  'messageId': '368',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.19?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.24/angular.js"></script>',
  'id': '126',
  'messageId': '369',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.2.24/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.24?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '127',
  'messageId': '369',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.24?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '128',
  'messageId': '369',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.2.24?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js"></script>',
  'id': '129',
  'messageId': '370',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.6.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '130',
  'messageId': '370',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.6.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '131',
  'messageId': '370',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.6.0?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js"></script>',
  'id': '132',
  'messageId': '371',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_alt_symbols/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '133',
  'messageId': '371',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_alt_symbols/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '134',
  'messageId': '371',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_alt_symbols/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js"></script>',
  'id': '135',
  'messageId': '372',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '136',
  'messageId': '372',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '137',
  'messageId': '372',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js"></script>',
  'id': '138',
  'messageId': '374',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_alt_symbols_raw/1.6.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '139',
  'messageId': '374',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_alt_symbols_raw/1.6.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '140',
  'messageId': '374',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_alt_symbols_raw/1.6.0?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js"></script>',
  'id': '141',
  'messageId': '375',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '142',
  'messageId': '375',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '143',
  'messageId': '375',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js"></script>',
  'id': '144',
  'messageId': '378',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_escaped/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '145',
  'messageId': '378',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_escaped/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '146',
  'messageId': '378',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_escaped/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js"></script>',
  'id': '147',
  'messageId': '380',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0',
  'wascid': '15'},
 {'alert': 'Absence of Anti-CSRF Tokens',
  'alertRef': '10202',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '352',
  'description': 'No Anti-CSRF tokens were found in a HTML submission form.\n'
                 'A cross-site request forgery is an attack that involves '
                 'forcing a victim to send an HTTP request to a target '
                 'destination without their knowledge or intent in order to '
                 'perform an action as the victim. The underlying cause is '
                 'application functionality using predictable URL/form actions '
                 'in a repeatable way. The nature of the attack is that CSRF '
                 'exploits the trust that a web site has for a user. By '
                 'contrast, cross-site scripting (XSS) exploits the trust that '
                 'a user has for a web site. Like XSS, CSRF attacks are not '
                 'necessarily cross-site, but they can be. Cross-site request '
                 'forgery is also known as CSRF, XSRF, one-click attack, '
                 'session riding, confused deputy, and sea surf.\n'
                 '\n'
                 'CSRF attacks are effective in a number of situations, '
                 'including:\n'
                 '    * The victim has an active session on the target site.\n'
                 '    * The victim is authenticated via HTTP auth on the '
                 'target site.\n'
                 '    * The victim is on the same local network as the target '
                 'site.\n'
                 '\n'
                 'CSRF has primarily been used to perform an action against a '
                 "target site using the victim's privileges, but recent "
                 'techniques have been discovered to disclose information by '
                 'gaining access to the response. The risk of information '
                 'disclosure is dramatically increased when the target site is '
                 'vulnerable to XSS, because XSS can be used as a platform for '
                 'CSRF, allowing the attack to operate within the bounds of '
                 'the same-origin policy.',
  'evidence': '<form action="" method="post">',
  'id': '148',
  'messageId': '380',
  'method': 'GET',
  'name': 'Absence of Anti-CSRF Tokens',
  'other': 'No known Anti-CSRF token [anticsrf, CSRFToken, '
           '__RequestVerificationToken, csrfmiddlewaretoken, '
           'authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, '
           '_csrfSecret, __csrf_magic, CSRF] was found in the following HTML '
           'form: [Form 1: "q" ].',
  'param': '',
  'pluginId': '10202',
  'reference': 'http://projects.webappsec.org/Cross-Site-Request-Forgery\n'
               'http://cwe.mitre.org/data/definitions/352.html',
  'risk': 'Low',
  'solution': 'Phase: Architecture and Design\n'
              'Use a vetted library or framework that does not allow this '
              'weakness to occur or provides constructs that make this '
              'weakness easier to avoid.\n'
              'For example, use anti-CSRF packages such as the OWASP '
              'CSRFGuard.\n'
              '\n'
              'Phase: Implementation\n'
              'Ensure that your application is free of cross-site scripting '
              'issues, because most CSRF defenses can be bypassed using '
              'attacker-controlled script.\n'
              '\n'
              'Phase: Architecture and Design\n'
              'Generate a unique nonce for each form, place the nonce into the '
              'form, and verify the nonce upon receipt of the form. Be sure '
              'that the nonce is not predictable (CWE-330).\n'
              'Note that this can be bypassed using XSS.\n'
              '\n'
              'Identify especially dangerous operations. When the user '
              'performs a dangerous operation, send a separate confirmation '
              'request to ensure that the user intended to perform that '
              'operation.\n'
              'Note that this can be bypassed using XSS.\n'
              '\n'
              'Use the ESAPI Session Management control.\n'
              'This control includes a component for CSRF.\n'
              '\n'
              'Do not use the GET method for any request that triggers a state '
              'change.\n'
              '\n'
              'Phase: Implementation\n'
              'Check the HTTP Referer header to see if the request originated '
              'from an expected page. This could break legitimate '
              'functionality, because users or proxies may have disabled '
              'sending the Referer for privacy reasons.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0',
  'wascid': '9'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '149',
  'messageId': '380',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '150',
  'messageId': '380',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js"></script>',
  'id': '151',
  'messageId': '383',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_escaped_alt_symbols/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '152',
  'messageId': '383',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_escaped_alt_symbols/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '153',
  'messageId': '383',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_escaped_alt_symbols/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js"></script>',
  'id': '154',
  'messageId': '385',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '155',
  'messageId': '385',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '156',
  'messageId': '385',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js"></script>',
  'id': '157',
  'messageId': '387',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '158',
  'messageId': '387',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '159',
  'messageId': '387',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js"></script>',
  'id': '160',
  'messageId': '388',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng_raw/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '161',
  'messageId': '388',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng_raw/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '162',
  'messageId': '388',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng_raw/1.4.0?q=test',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js"></script>',
  'id': '163',
  'messageId': '391',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_cookie_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '164',
  'messageId': '391',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_cookie_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '165',
  'messageId': '391',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_cookie_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js"></script>',
  'id': '166',
  'messageId': '393',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_form_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '167',
  'messageId': '393',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_form_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '168',
  'messageId': '393',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_form_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js"></script>',
  'id': '169',
  'messageId': '395',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_post_message_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '170',
  'messageId': '395',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_post_message_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '171',
  'messageId': '395',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_post_message_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script src="http://127.0.0.2/localhost_import.js"></script>',
  'id': '172',
  'messageId': '397',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'http://127.0.0.2/localhost_import.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js',
  'wascid': '15'},
 {'alert': 'Secure Pages Include Mixed Content (Including Scripts)',
  'alertRef': '10040',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '311',
  'description': 'The page includes mixed content, that is content accessed '
                 'via HTTP instead of HTTPS.',
  'evidence': 'http://127.0.0.2/localhost_import.js',
  'id': '173',
  'messageId': '397',
  'method': 'GET',
  'name': 'Secure Pages Include Mixed Content (Including Scripts)',
  'other': 'tag=script src=http://127.0.0.2/localhost_import.js\n',
  'param': '',
  'pluginId': '10040',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html',
  'risk': 'Medium',
  'solution': 'A page that is available over SSL/TLS must be comprised '
              'completely of content which is transmitted over SSL/TLS.\n'
              'The page must not contain any content that is transmitted over '
              'unencrypted HTTP.\n'
              ' This includes content from third party sites.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js',
  'wascid': '4'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '174',
  'messageId': '397',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '175',
  'messageId': '397',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js"></script>',
  'id': '176',
  'messageId': '399',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_storage_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '177',
  'messageId': '399',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_storage_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '178',
  'messageId': '399',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_storage_parse/1.6.0',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="http://192.168.1.2/private_network_import.js"></script>',
  'id': '179',
  'messageId': '401',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'http://192.168.1.2/private_network_import.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js',
  'wascid': '15'},
 {'alert': 'Private IP Disclosure',
  'alertRef': '2',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '200',
  'description': 'A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or '
                 'an Amazon EC2 private hostname (for example, ip-10-0-56-78) '
                 'has been found in the HTTP response body. This information '
                 'might be helpful for further attacks targeting internal '
                 'systems.',
  'evidence': '192.168.1.2',
  'id': '180',
  'messageId': '401',
  'method': 'GET',
  'name': 'Private IP Disclosure',
  'other': '192.168.1.2\n',
  'param': '',
  'pluginId': '2',
  'reference': 'https://tools.ietf.org/html/rfc1918',
  'risk': 'Low',
  'solution': 'Remove the private IP address from the HTTP response body.  For '
              'comments, use JSP/ASP/PHP comment instead of HTML/JavaScript '
              'comment which can be seen by client browsers.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js',
  'wascid': '13'},
 {'alert': 'Secure Pages Include Mixed Content (Including Scripts)',
  'alertRef': '10040',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '311',
  'description': 'The page includes mixed content, that is content accessed '
                 'via HTTP instead of HTTPS.',
  'evidence': 'http://192.168.1.2/private_network_import.js',
  'id': '181',
  'messageId': '401',
  'method': 'GET',
  'name': 'Secure Pages Include Mixed Content (Including Scripts)',
  'other': 'tag=script src=http://192.168.1.2/private_network_import.js\n',
  'param': '',
  'pluginId': '10040',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html',
  'risk': 'Medium',
  'solution': 'A page that is available over SSL/TLS must be comprised '
              'completely of content which is transmitted over SSL/TLS.\n'
              'The page must not contain any content that is transmitted over '
              'unencrypted HTTP.\n'
              ' This includes content from third party sites.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js',
  'wascid': '4'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '182',
  'messageId': '401',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '183',
  'messageId': '401',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="http://g00gle.com/typosquatting_domain.js"></script>',
  'id': '184',
  'messageId': '402',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'http://g00gle.com/typosquatting_domain.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js',
  'wascid': '15'},
 {'alert': 'Secure Pages Include Mixed Content (Including Scripts)',
  'alertRef': '10040',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '311',
  'description': 'The page includes mixed content, that is content accessed '
                 'via HTTP instead of HTTPS.',
  'evidence': 'http://g00gle.com/typosquatting_domain.js',
  'id': '185',
  'messageId': '402',
  'method': 'GET',
  'name': 'Secure Pages Include Mixed Content (Including Scripts)',
  'other': 'tag=script src=http://g00gle.com/typosquatting_domain.js\n',
  'param': '',
  'pluginId': '10040',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html',
  'risk': 'Medium',
  'solution': 'A page that is available over SSL/TLS must be comprised '
              'completely of content which is transmitted over SSL/TLS.\n'
              'The page must not contain any content that is transmitted over '
              'unencrypted HTTP.\n'
              ' This includes content from third party sites.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js',
  'wascid': '4'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '186',
  'messageId': '402',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '187',
  'messageId': '402',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '188',
  'messageId': '403',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/cors/alloworigin/dynamicAllowOrigin',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '189',
  'messageId': '403',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/cors/alloworigin/dynamicAllowOrigin',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '190',
  'messageId': '405',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/cors/alloworigin/allowNullOrigin',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '191',
  'messageId': '405',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/cors/alloworigin/allowNullOrigin',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '192',
  'messageId': '406',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/cors/alloworigin/allowInsecureScheme',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '193',
  'messageId': '406',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/cors/alloworigin/allowInsecureScheme',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '194',
  'messageId': '407',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '195',
  'messageId': '407',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '196',
  'messageId': '411',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '197',
  'messageId': '411',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '198',
  'messageId': '412',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '199',
  'messageId': '412',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '200',
  'messageId': '413',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/cookie/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '201',
  'messageId': '413',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/cookie/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '202',
  'messageId': '415',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '203',
  'messageId': '415',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '204',
  'messageId': '417',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '205',
  'messageId': '417',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '206',
  'messageId': '418',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '207',
  'messageId': '418',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '208',
  'messageId': '419',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/window/name/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '209',
  'messageId': '419',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/window/name/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '210',
  'messageId': '422',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/window/name/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '211',
  'messageId': '422',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/window/name/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '212',
  'messageId': '423',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/window/name/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '213',
  'messageId': '423',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/window/name/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '214',
  'messageId': '424',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/localStorage/array/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '215',
  'messageId': '424',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/localStorage/array/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '216',
  'messageId': '427',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '217',
  'messageId': '427',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '218',
  'messageId': '429',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '219',
  'messageId': '429',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '220',
  'messageId': '430',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '221',
  'messageId': '430',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '222',
  'messageId': '431',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/array/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '223',
  'messageId': '431',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/array/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '224',
  'messageId': '433',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/localStorage/property/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '225',
  'messageId': '433',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/localStorage/property/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '226',
  'messageId': '438',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '227',
  'messageId': '438',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '228',
  'messageId': '441',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '229',
  'messageId': '441',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '230',
  'messageId': '443',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '231',
  'messageId': '443',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '232',
  'messageId': '445',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/property/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '233',
  'messageId': '445',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/property/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '234',
  'messageId': '448',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/array/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '235',
  'messageId': '448',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/array/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '236',
  'messageId': '451',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '237',
  'messageId': '451',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '238',
  'messageId': '453',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '239',
  'messageId': '453',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '240',
  'messageId': '454',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/property/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '241',
  'messageId': '454',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/property/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '242',
  'messageId': '455',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '243',
  'messageId': '455',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '244',
  'messageId': '457',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/array/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '245',
  'messageId': '457',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/array/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '246',
  'messageId': '458',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '247',
  'messageId': '458',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '248',
  'messageId': '464',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '249',
  'messageId': '464',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '250',
  'messageId': '466',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '251',
  'messageId': '466',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '252',
  'messageId': '468',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/property/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '253',
  'messageId': '468',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/property/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '254',
  'messageId': '471',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '255',
  'messageId': '471',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '256',
  'messageId': '473',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '257',
  'messageId': '473',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '258',
  'messageId': '474',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '259',
  'messageId': '474',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '260',
  'messageId': '475',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/complexMessageDocumentWriteEval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '261',
  'messageId': '475',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/complexMessageDocumentWriteEval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '262',
  'messageId': '476',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithPartialStringComparison',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '263',
  'messageId': '476',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithPartialStringComparison',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '264',
  'messageId': '477',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithRegExp',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '265',
  'messageId': '477',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithRegExp',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '266',
  'messageId': '478',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '267',
  'messageId': '478',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '268',
  'messageId': '482',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '269',
  'messageId': '482',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '270',
  'messageId': '483',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '271',
  'messageId': '483',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '272',
  'messageId': '484',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/eval',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '273',
  'messageId': '484',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '274',
  'messageId': '486',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '275',
  'messageId': '486',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '276',
  'messageId': '487',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '277',
  'messageId': '487',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '278',
  'messageId': '488',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/dompropagation/',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '279',
  'messageId': '488',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/dompropagation/',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '280',
  'messageId': '490',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/javascripturi.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '281',
  'messageId': '490',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/javascripturi.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '282',
  'messageId': '490',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/javascripturi.html',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '283',
  'messageId': '491',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '284',
  'messageId': '491',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '285',
  'messageId': '494',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '286',
  'messageId': '494',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '287',
  'messageId': '496',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/head?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '288',
  'messageId': '496',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/head?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '289',
  'messageId': '497',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/head?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '290',
  'messageId': '497',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/head?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '291',
  'messageId': '498',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body_comment?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '292',
  'messageId': '498',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body_comment?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '293',
  'messageId': '499',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body_comment?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '294',
  'messageId': '499',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body_comment?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '295',
  'messageId': '500',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/textarea?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '296',
  'messageId': '500',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/textarea?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '297',
  'messageId': '501',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/textarea?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '298',
  'messageId': '501',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/textarea?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '299',
  'messageId': '502',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/tagname?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '300',
  'messageId': '502',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/tagname?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '301',
  'messageId': '503',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/tagname?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '302',
  'messageId': '503',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/tagname?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '303',
  'messageId': '504',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_unquoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '304',
  'messageId': '504',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_unquoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '305',
  'messageId': '505',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_unquoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '306',
  'messageId': '505',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_unquoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '307',
  'messageId': '506',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_singlequoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '308',
  'messageId': '506',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_singlequoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '309',
  'messageId': '507',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_singlequoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '310',
  'messageId': '507',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_singlequoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '311',
  'messageId': '508',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_quoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '312',
  'messageId': '508',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_quoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '313',
  'messageId': '509',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_quoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '314',
  'messageId': '509',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_quoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '315',
  'messageId': '510',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_name?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '316',
  'messageId': '510',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_name?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '317',
  'messageId': '511',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_name?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '318',
  'messageId': '511',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_name?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '319',
  'messageId': '512',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '320',
  'messageId': '512',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '321',
  'messageId': '513',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '322',
  'messageId': '513',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '323',
  'messageId': '514',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_value?escape=HTML_ESCAPE&q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '324',
  'messageId': '514',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_value?escape=HTML_ESCAPE&q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '325',
  'messageId': '515',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '326',
  'messageId': '515',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '327',
  'messageId': '516',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_font_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '328',
  'messageId': '516',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_font_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '329',
  'messageId': '517',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_font_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '330',
  'messageId': '517',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_font_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '331',
  'messageId': '518',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_assignment?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '332',
  'messageId': '518',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_assignment?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '333',
  'messageId': '519',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_assignment?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '334',
  'messageId': '519',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_assignment?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '335',
  'messageId': '520',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_eval?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '336',
  'messageId': '520',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_eval?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '337',
  'messageId': '521',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_eval?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '338',
  'messageId': '521',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_eval?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '339',
  'messageId': '522',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_quoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '340',
  'messageId': '522',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_quoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '341',
  'messageId': '523',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_quoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '342',
  'messageId': '523',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_quoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '343',
  'messageId': '524',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_singlequoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '344',
  'messageId': '524',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_singlequoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '345',
  'messageId': '525',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_singlequoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '346',
  'messageId': '525',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_singlequoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '347',
  'messageId': '526',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_slashquoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '348',
  'messageId': '526',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_slashquoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '349',
  'messageId': '527',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_slashquoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '350',
  'messageId': '527',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_slashquoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '351',
  'messageId': '528',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_comment?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '352',
  'messageId': '528',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_comment?q=a',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script src="http://irrelevant.google.com?a"/>',
  'id': '353',
  'messageId': '529',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'http://irrelevant.google.com?a',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_script?q=a',
  'wascid': '15'},
 {'alert': 'Secure Pages Include Mixed Content (Including Scripts)',
  'alertRef': '10040',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '311',
  'description': 'The page includes mixed content, that is content accessed '
                 'via HTTP instead of HTTPS.',
  'evidence': 'http://irrelevant.google.com?a',
  'id': '354',
  'messageId': '529',
  'method': 'GET',
  'name': 'Secure Pages Include Mixed Content (Including Scripts)',
  'other': 'tag=script src=http://irrelevant.google.com?a\n',
  'param': '',
  'pluginId': '10040',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html',
  'risk': 'Medium',
  'solution': 'A page that is available over SSL/TLS must be comprised '
              'completely of content which is transmitted over SSL/TLS.\n'
              'The page must not contain any content that is transmitted over '
              'unencrypted HTTP.\n'
              ' This includes content from third party sites.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_script?q=a',
  'wascid': '4'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '355',
  'messageId': '529',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_script?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '356',
  'messageId': '529',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_script?q=a',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script src="http://irrelevant.google.com?a"/>',
  'id': '357',
  'messageId': '530',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'http://irrelevant.google.com?a',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_script?q=a',
  'wascid': '15'},
 {'alert': 'Secure Pages Include Mixed Content (Including Scripts)',
  'alertRef': '10040',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '311',
  'description': 'The page includes mixed content, that is content accessed '
                 'via HTTP instead of HTTPS.',
  'evidence': 'http://irrelevant.google.com?a',
  'id': '358',
  'messageId': '530',
  'method': 'GET',
  'name': 'Secure Pages Include Mixed Content (Including Scripts)',
  'other': 'tag=script src=http://irrelevant.google.com?a\n',
  'param': '',
  'pluginId': '10040',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html',
  'risk': 'Medium',
  'solution': 'A page that is available over SSL/TLS must be comprised '
              'completely of content which is transmitted over SSL/TLS.\n'
              'The page must not contain any content that is transmitted over '
              'unencrypted HTTP.\n'
              ' This includes content from third party sites.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_script?q=a',
  'wascid': '4'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '359',
  'messageId': '530',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_script?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '360',
  'messageId': '530',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_script?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '361',
  'messageId': '531',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_comment?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '362',
  'messageId': '531',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_comment?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '363',
  'messageId': '534',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_import?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '364',
  'messageId': '534',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_import?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '365',
  'messageId': '536',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_import?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '366',
  'messageId': '536',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_import?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '367',
  'messageId': '538',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/js/escape?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '368',
  'messageId': '538',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/js/escape?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '369',
  'messageId': '539',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/js/encodeURIComponent?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '370',
  'messageId': '539',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/js/encodeURIComponent?q=a',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': '',
  'id': '371',
  'messageId': '541',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/flashinjection/callbackParameterDoesNothing?callback=func',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '372',
  'messageId': '541',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/flashinjection/callbackParameterDoesNothing?callback=func',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '373',
  'messageId': '542',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/js/html_escape?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '374',
  'messageId': '542',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/escape/js/html_escape?q=a',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': '',
  'id': '375',
  'messageId': '543',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/flashinjection/callbackIsEchoedBack?callback=func',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '376',
  'messageId': '543',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/flashinjection/callbackIsEchoedBack?callback=func',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '377',
  'messageId': '544',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'http://public-firing-range.appspot.com/mixedcontent/script.js',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '378',
  'messageId': '550',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/body?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '379',
  'messageId': '550',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/body?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '380',
  'messageId': '552',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/redirect/meta?q=/',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '381',
  'messageId': '552',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/redirect/meta?q=/',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '382',
  'messageId': '553',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/title?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '383',
  'messageId': '553',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/title?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '384',
  'messageId': '554',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/head?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '385',
  'messageId': '554',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/head?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '386',
  'messageId': '555',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/tagname?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '387',
  'messageId': '555',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/tagname?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '388',
  'messageId': '556',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/body_comment?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '389',
  'messageId': '556',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/body_comment?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '390',
  'messageId': '557',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_unquoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '391',
  'messageId': '557',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_unquoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '392',
  'messageId': '558',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_singlequoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '393',
  'messageId': '558',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_singlequoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '394',
  'messageId': '559',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_quoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '395',
  'messageId': '559',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_quoted?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '396',
  'messageId': '560',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_name?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '397',
  'messageId': '560',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_name?q=a',
  'wascid': '15'},
 {'alert': 'Application Error Disclosure',
  'alertRef': '90022',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '200',
  'description': 'This page contains an error/warning message that may '
                 'disclose sensitive information like the location of the file '
                 'that produced the unhandled exception. This information can '
                 'be used to launch further attacks against the web '
                 'application. The alert could be a false positive if the '
                 'error message is found inside a documentation page.',
  'evidence': 'HTTP/1.1 500 Internal Server Error',
  'id': '398',
  'messageId': '566',
  'method': 'GET',
  'name': 'Application Error Disclosure',
  'other': '',
  'param': '',
  'pluginId': '90022',
  'reference': '',
  'risk': 'Low',
  'solution': 'Review the source code of this page. Implement custom error '
              'pages. Consider implementing a mechanism to provide a unique '
              'error reference/identifier to the client (browser) while '
              'logging the details on the server side and not exposing them to '
              'the user.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/body/500?q=a',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '399',
  'messageId': '567',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/iframe_attribute_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '400',
  'messageId': '567',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/iframe_attribute_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '401',
  'messageId': '568',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/iframe_srcdoc?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '402',
  'messageId': '568',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/iframe_srcdoc?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '403',
  'messageId': '569',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/textarea?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '404',
  'messageId': '569',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/textarea?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '405',
  'messageId': '570',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/textarea_attribute_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '406',
  'messageId': '570',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/textarea_attribute_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '407',
  'messageId': '571',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/noscript?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '408',
  'messageId': '571',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/noscript?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '409',
  'messageId': '572',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/style_attribute_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '410',
  'messageId': '572',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/style_attribute_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '411',
  'messageId': '573',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/css_style?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '412',
  'messageId': '573',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/css_style?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '413',
  'messageId': '574',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/css_style_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '414',
  'messageId': '574',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/css_style_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '415',
  'messageId': '575',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/css_style_font_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '416',
  'messageId': '575',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/css_style_font_value?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '417',
  'messageId': '576',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_unquoted/UNQUOTED_ATTRIBUTE?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '418',
  'messageId': '576',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_unquoted/UNQUOTED_ATTRIBUTE?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '419',
  'messageId': '579',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_singlequoted/SINGLE_QUOTED_ATTRIBUTE?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '420',
  'messageId': '579',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_singlequoted/SINGLE_QUOTED_ATTRIBUTE?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '421',
  'messageId': '580',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_quoted/DOUBLE_QUOTED_ATTRIBUTE?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '422',
  'messageId': '580',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_quoted/DOUBLE_QUOTED_ATTRIBUTE?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '423',
  'messageId': '583',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_eval?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '424',
  'messageId': '583',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_eval?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '425',
  'messageId': '584',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_assignment?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '426',
  'messageId': '584',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_assignment?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '427',
  'messageId': '585',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_quoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '428',
  'messageId': '585',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_quoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '429',
  'messageId': '586',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_singlequoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '430',
  'messageId': '586',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_singlequoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '431',
  'messageId': '587',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_slashquoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '432',
  'messageId': '587',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_slashquoted_string?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '433',
  'messageId': '588',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_comment?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '434',
  'messageId': '588',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/js_comment?q=a',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script src="http://irrelevant.google.com/a"/>',
  'id': '435',
  'messageId': '589',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'http://irrelevant.google.com/a',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_script?q=a',
  'wascid': '15'},
 {'alert': 'Secure Pages Include Mixed Content (Including Scripts)',
  'alertRef': '10040',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '311',
  'description': 'The page includes mixed content, that is content accessed '
                 'via HTTP instead of HTTPS.',
  'evidence': 'http://irrelevant.google.com/a',
  'id': '436',
  'messageId': '589',
  'method': 'GET',
  'name': 'Secure Pages Include Mixed Content (Including Scripts)',
  'other': 'tag=script src=http://irrelevant.google.com/a\n',
  'param': '',
  'pluginId': '10040',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html',
  'risk': 'Medium',
  'solution': 'A page that is available over SSL/TLS must be comprised '
              'completely of content which is transmitted over SSL/TLS.\n'
              'The page must not contain any content that is transmitted over '
              'unencrypted HTTP.\n'
              ' This includes content from third party sites.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_script?q=a',
  'wascid': '4'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '437',
  'messageId': '589',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_script?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '438',
  'messageId': '589',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/attribute_script?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '439',
  'messageId': '590',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/url/href?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '440',
  'messageId': '590',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/url/href?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '441',
  'messageId': '593',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/url/script_src?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '442',
  'messageId': '593',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/url/script_src?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '443',
  'messageId': '594',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/url/css_import?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '444',
  'messageId': '594',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/url/css_import?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '445',
  'messageId': '595',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/url/object_data?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '446',
  'messageId': '595',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/url/object_data?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '447',
  'messageId': '596',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/url/object_param?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '448',
  'messageId': '596',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/url/object_param?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '449',
  'messageId': '597',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/json?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '450',
  'messageId': '597',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/json?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '451',
  'messageId': '598',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/contentsniffing/json?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '452',
  'messageId': '600',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/contentsniffing/plaintext?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '453',
  'messageId': '601',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/jsoncallback',
  'wascid': '15'},
 {'alert': 'Absence of Anti-CSRF Tokens',
  'alertRef': '10202',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '352',
  'description': 'No Anti-CSRF tokens were found in a HTML submission form.\n'
                 'A cross-site request forgery is an attack that involves '
                 'forcing a victim to send an HTTP request to a target '
                 'destination without their knowledge or intent in order to '
                 'perform an action as the victim. The underlying cause is '
                 'application functionality using predictable URL/form actions '
                 'in a repeatable way. The nature of the attack is that CSRF '
                 'exploits the trust that a web site has for a user. By '
                 'contrast, cross-site scripting (XSS) exploits the trust that '
                 'a user has for a web site. Like XSS, CSRF attacks are not '
                 'necessarily cross-site, but they can be. Cross-site request '
                 'forgery is also known as CSRF, XSRF, one-click attack, '
                 'session riding, confused deputy, and sea surf.\n'
                 '\n'
                 'CSRF attacks are effective in a number of situations, '
                 'including:\n'
                 '    * The victim has an active session on the target site.\n'
                 '    * The victim is authenticated via HTTP auth on the '
                 'target site.\n'
                 '    * The victim is on the same local network as the target '
                 'site.\n'
                 '\n'
                 'CSRF has primarily been used to perform an action against a '
                 "target site using the victim's privileges, but recent "
                 'techniques have been discovered to disclose information by '
                 'gaining access to the response. The risk of information '
                 'disclosure is dramatically increased when the target site is '
                 'vulnerable to XSS, because XSS can be used as a platform for '
                 'CSRF, allowing the attack to operate within the bounds of '
                 'the same-origin policy.',
  'evidence': '<form method="POST">',
  'id': '454',
  'messageId': '602',
  'method': 'GET',
  'name': 'Absence of Anti-CSRF Tokens',
  'other': 'No known Anti-CSRF token [anticsrf, CSRFToken, '
           '__RequestVerificationToken, csrfmiddlewaretoken, '
           'authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, '
           '_csrfSecret, __csrf_magic, CSRF] was found in the following HTML '
           'form: [Form 1: "q" ].',
  'param': '',
  'pluginId': '10202',
  'reference': 'http://projects.webappsec.org/Cross-Site-Request-Forgery\n'
               'http://cwe.mitre.org/data/definitions/352.html',
  'risk': 'Low',
  'solution': 'Phase: Architecture and Design\n'
              'Use a vetted library or framework that does not allow this '
              'weakness to occur or provides constructs that make this '
              'weakness easier to avoid.\n'
              'For example, use anti-CSRF packages such as the OWASP '
              'CSRFGuard.\n'
              '\n'
              'Phase: Implementation\n'
              'Ensure that your application is free of cross-site scripting '
              'issues, because most CSRF defenses can be bypassed using '
              'attacker-controlled script.\n'
              '\n'
              'Phase: Architecture and Design\n'
              'Generate a unique nonce for each form, place the nonce into the '
              'form, and verify the nonce upon receipt of the form. Be sure '
              'that the nonce is not predictable (CWE-330).\n'
              'Note that this can be bypassed using XSS.\n'
              '\n'
              'Identify especially dangerous operations. When the user '
              'performs a dangerous operation, send a separate confirmation '
              'request to ensure that the user intended to perform that '
              'operation.\n'
              'Note that this can be bypassed using XSS.\n'
              '\n'
              'Use the ESAPI Session Management control.\n'
              'This control includes a component for CSRF.\n'
              '\n'
              'Do not use the GET method for any request that triggers a state '
              'change.\n'
              '\n'
              'Phase: Implementation\n'
              'Check the HTTP Referer header to see if the request originated '
              'from an expected page. This could break legitimate '
              'functionality, because users or proxies may have disabled '
              'sending the Referer for privacy reasons.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/form',
  'wascid': '9'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '455',
  'messageId': '602',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/form',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '456',
  'messageId': '602',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/form',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '457',
  'messageId': '604',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/filteredcharsets/body/SpaceDoubleQuoteSlashEquals?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '458',
  'messageId': '604',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/filteredcharsets/body/SpaceDoubleQuoteSlashEquals?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '459',
  'messageId': '607',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/filteredcharsets/attribute_unquoted/DoubleQuoteSinglequote?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '460',
  'messageId': '607',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/filteredcharsets/attribute_unquoted/DoubleQuoteSinglequote?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '461',
  'messageId': '609',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseSensitive/script?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '462',
  'messageId': '609',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseSensitive/script?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '465',
  'messageId': '614',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseInsensitive/script?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '466',
  'messageId': '614',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseInsensitive/script?q=a',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script src="https://google.com"></script>',
  'id': '467',
  'messageId': '616',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://google.com',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=https://google.com',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '468',
  'messageId': '616',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=https://google.com',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '469',
  'messageId': '616',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=https://google.com',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '470',
  'messageId': '617',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/script_hash.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '471',
  'messageId': '617',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/script_hash.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '472',
  'messageId': '617',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/script_hash.html',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '473',
  'messageId': '618',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/object_raw?q=https://google.com',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '474',
  'messageId': '618',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/object_raw?q=https://google.com',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '475',
  'messageId': '619',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/object/application_x-shockwave-flash?q=https://google.com',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '476',
  'messageId': '619',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/parameter/object/application_x-shockwave-flash?q=https://google.com',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '477',
  'messageId': '621',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/InCallback/?q=urc_button.click',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '478',
  'messageId': '621',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/InCallback/?q=urc_button.click',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '479',
  'messageId': '626',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/object_hash.html',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '480',
  'messageId': '626',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/object_hash.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '481',
  'messageId': '626',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/remoteinclude/object_hash.html',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '482',
  'messageId': '627',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/OtherParameter/?q=%26callback%3Durc_button.click%23',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '483',
  'messageId': '627',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/OtherParameter/?q=%26callback%3Durc_button.click%23',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': '',
  'id': '484',
  'messageId': '629',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following comment/snippet was identified via the pattern: '
           '\\bFROM\\b\n'
           '<script>\n'
           "    var resultDiv = document.getElementById('result');\n"
           '\n'
           '      /**\n'
           '       * Callback function that receives data from the JSONP '
           'callback and\n'
           '       * prints a "stringified" representation of the response, '
           'just for\n'
           '       * human debugging.\n'
           '       */\n'
           '      function callbackFunc(data) {\n'
           "        resultDiv.textContent = 'JSONP data received: ' + "
           'JSON.stringify(data);\n'
           '      }\n'
           '\n'
           '      try {\n'
           '        // Retrieve the "q" parameter in the URL fragment\n'
           "        var q = decodeURIComponent(new RegExp('[?&#]q=([^&]*)')\n"
           '            .exec(location.hash)[1]);\n'
           '\n'
           '        // Validate it (prevents trivial XSS)\n'
           '        var allowedPattern = /^[a-zA-Z0-9\\._&#=]+$/;\n'
           '        if (allowedPattern.test(q)) {\n'
           '          // The vulnerability arises because of this insecure '
           'concatenation\n'
           "          var url = '/reverseclickjacking/jsonpendpoint?q=' + q\n"
           "              + '&callback=' + q + '';\n"
           '\n'
           '          /* Create the <script> tag that executes the JS code '
           'returned by\n'
           '           * the JSONP endpoint. */\n'
           "          var s = document.createElement('script');\n"
           "          s.type = 'text/javascript';\n"
           '          s.src = url;\n'
           '          document.body.appendChild(s);\n'
           '        }\n'
           '      } catch(e) {\n'
           "        resultDiv.textContent = 'Please specify a q parameter in "
           "the fragment.';\n"
           '      }\n'
           '  </script>\n',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/InCallback/',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '485',
  'messageId': '629',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/InCallback/',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '486',
  'messageId': '629',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/InCallback/',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': '',
  'id': '487',
  'messageId': '632',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following comment/snippet was identified via the pattern: '
           '\\bFROM\\b\n'
           '<script>\n'
           "    var resultDiv = document.getElementById('result');\n"
           '\n'
           '      /**\n'
           '       * Callback function that receives data from the JSONP '
           'callback and\n'
           '       * prints a "stringified" representation of the response, '
           'just for\n'
           '       * human debugging.\n'
           '       */\n'
           '      function callbackFunc(data) {\n'
           "        resultDiv.textContent = 'JSONP data received: ' + "
           'JSON.stringify(data);\n'
           '      }\n'
           '\n'
           '      try {\n'
           '        // Retrieve the "q" parameter in the URL fragment\n'
           "        var q = decodeURIComponent(new RegExp('[?&#]q=([^&]*)')\n"
           '            .exec(location.hash)[1]);\n'
           '\n'
           '        // Validate it (prevents trivial XSS)\n'
           '        var allowedPattern = /^[a-zA-Z0-9\\._&#=]+$/;\n'
           '        if (allowedPattern.test(q)) {\n'
           '          // The vulnerability arises because of this insecure '
           'concatenation\n'
           "          var url = '/reverseclickjacking/jsonpendpoint?q=' + q\n"
           "              + '&callback=callbackFunc';\n"
           '\n'
           '          /* Create the <script> tag that executes the JS code '
           'returned by\n'
           '           * the JSONP endpoint. */\n'
           "          var s = document.createElement('script');\n"
           "          s.type = 'text/javascript';\n"
           '          s.src = url;\n'
           '          document.body.appendChild(s);\n'
           '        }\n'
           '      } catch(e) {\n'
           "        resultDiv.textContent = 'Please specify a q parameter in "
           "the fragment.';\n"
           '      }\n'
           '  </script>\n',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/OtherParameter/',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '488',
  'messageId': '632',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/OtherParameter/',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '489',
  'messageId': '632',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/OtherParameter/',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '490',
  'messageId': '634',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithoutXFO/?q=foo',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '491',
  'messageId': '634',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithoutXFO/?q=foo',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '492',
  'messageId': '640',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithoutXFO/?q=%26callback%3Dfoo%23',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '493',
  'messageId': '640',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithoutXFO/?q=%26callback%3Dfoo%23',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': '',
  'id': '494',
  'messageId': '643',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following comment/snippet was identified via the pattern: '
           '\\bFROM\\b\n'
           '<script>\n'
           "    var resultDiv = document.getElementById('result');\n"
           '\n'
           '      /**\n'
           '       * Callback function that receives data from the JSONP '
           'callback and\n'
           '       * prints a "stringified" representation of the response, '
           'only for\n'
           '       * human debugging.\n'
           '       */\n'
           '      function callbackFunc(data) {\n'
           "        resultDiv.textContent = 'JSONP data received: ' + "
           'JSON.stringify(data);\n'
           '      }\n'
           '\n'
           '      try {\n'
           '        // Retrieve the "q" parameter in the URL fragment\n'
           "        var q = decodeURIComponent(new RegExp('[?&#]q=([^&]*)')\n"
           '            .exec(location.hash)[1]);\n'
           '\n'
           '        // Validate it (prevents trivial XSS)\n'
           '        var allowedPattern = /^[a-zA-Z0-9\\._&#=]+$/;\n'
           '        if (allowedPattern.test(q)) {\n'
           '          // The vulnerability arises because of this insecure '
           'concatenation\n'
           "          var url = '/reverseclickjacking/jsonpendpoint?q=' + q\n"
           "              + '&callback=' + q + '';\n"
           '\n'
           '          /* Create the <script> tag that executes the JS code '
           'returned by\n'
           '           * the JSONP endpoint. */\n'
           "          var s = document.createElement('script');\n"
           "          s.type = 'text/javascript';\n"
           '          s.src = url;\n'
           '          document.body.appendChild(s);\n'
           '        }\n'
           '      } catch(e) {\n'
           "        resultDiv.textContent = 'Please specify a q parameter in "
           "the fragment.';\n"
           '      }\n'
           '  </script>\n',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithoutXFO/',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '495',
  'messageId': '643',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithoutXFO/',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '496',
  'messageId': '643',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithoutXFO/',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': '',
  'id': '497',
  'messageId': '647',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following comment/snippet was identified via the pattern: '
           '\\bFROM\\b\n'
           '<script>\n'
           "    var resultDiv = document.getElementById('result');\n"
           '\n'
           '      /**\n'
           '       * Callback function that receives data from the JSONP '
           'callback and\n'
           '       * prints a "stringified" representation of the response, '
           'only for\n'
           '       * human debugging.\n'
           '       */\n'
           '      function callbackFunc(data) {\n'
           "        resultDiv.textContent = 'JSONP data received: ' + "
           'JSON.stringify(data);\n'
           '      }\n'
           '\n'
           '      try {\n'
           '        // Retrieve the "q" parameter in the URL fragment\n'
           "        var q = decodeURIComponent(new RegExp('[?&#]q=([^&]*)')\n"
           '            .exec(location.hash)[1]);\n'
           '\n'
           '        // Validate it (prevents trivial XSS)\n'
           '        var allowedPattern = /^[a-zA-Z0-9\\._&#=]+$/;\n'
           '        if (allowedPattern.test(q)) {\n'
           '          // The vulnerability arises because of this insecure '
           'concatenation\n'
           "          var url = '/reverseclickjacking/jsonpendpoint?q=' + q\n"
           "              + '&callback=callbackFunc';\n"
           '\n'
           '          /* Create the <script> tag that executes the JS code '
           'returned by\n'
           '           * the JSONP endpoint. */\n'
           "          var s = document.createElement('script');\n"
           "          s.type = 'text/javascript';\n"
           '          s.src = url;\n'
           '          document.body.appendChild(s);\n'
           '        }\n'
           '      } catch(e) {\n'
           "        resultDiv.textContent = 'Please specify a q parameter in "
           "the fragment.';\n"
           '      }\n'
           '  </script>\n',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithoutXFO/',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '498',
  'messageId': '647',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithoutXFO/',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '499',
  'messageId': '647',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithoutXFO/',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '500',
  'messageId': '650',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithXFO/?q=foo',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '501',
  'messageId': '652',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithXFO/?q=%26callback%3Dfoo%23',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': '',
  'id': '502',
  'messageId': '654',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following comment/snippet was identified via the pattern: '
           '\\bFROM\\b\n'
           '<script>\n'
           "    var resultDiv = document.getElementById('result');\n"
           '\n'
           '      /**\n'
           '       * Callback function that receives data from the JSONP '
           'callback and\n'
           '       * prints a "stringified" representation of the response, '
           'only for\n'
           '       * human debugging.\n'
           '       */\n'
           '      function callbackFunc(data) {\n'
           "        resultDiv.textContent = 'JSONP data received: ' + "
           'JSON.stringify(data);\n'
           '      }\n'
           '\n'
           '      try {\n'
           '        // Retrieve the "q" parameter in the URL fragment\n'
           "        var q = decodeURIComponent(new RegExp('[?&#]q=([^&]*)')\n"
           '            .exec(location.hash)[1]);\n'
           '\n'
           '        // Validate it (prevents trivial XSS)\n'
           '        var allowedPattern = /^[a-zA-Z0-9\\._&#=]+$/;\n'
           '        if (allowedPattern.test(q)) {\n'
           '          // The vulnerability arises because of this insecure '
           'concatenation\n'
           "          var url = '/reverseclickjacking/jsonpendpoint?q=' + q\n"
           "              + '&callback=' + q + '';\n"
           '\n'
           '          /* Create the <script> tag that executes the JS code '
           'returned by\n'
           '           * the JSONP endpoint. */\n'
           "          var s = document.createElement('script');\n"
           "          s.type = 'text/javascript';\n"
           '          s.src = url;\n'
           '          document.body.appendChild(s);\n'
           '        }\n'
           '      } catch(e) {\n'
           "        resultDiv.textContent = 'Please specify a q parameter in "
           "the fragment.';\n"
           '      }\n'
           '  </script>\n',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithXFO/',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '503',
  'messageId': '654',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithXFO/',
  'wascid': '15'},
 {'alert': 'Information Disclosure - Suspicious Comments',
  'alertRef': '10027',
  'attack': '',
  'confidence': 'Low',
  'cweid': '200',
  'description': 'The response appears to contain suspicious comments which '
                 'may help an attacker. Note: Matches made within script '
                 'blocks or files are against the entire content not only '
                 'comments.',
  'evidence': '',
  'id': '504',
  'messageId': '656',
  'method': 'GET',
  'name': 'Information Disclosure - Suspicious Comments',
  'other': 'The following comment/snippet was identified via the pattern: '
           '\\bFROM\\b\n'
           '<script>\n'
           "    var resultDiv = document.getElementById('result');\n"
           '\n'
           '      /**\n'
           '       * Callback function that receives data from the JSONP '
           'callback and\n'
           '       * prints a "stringified" representation of the response, '
           'only for\n'
           '       * human debugging.\n'
           '       */\n'
           '      function callbackFunc(data) {\n'
           "        resultDiv.textContent = 'JSONP data received: ' + "
           'JSON.stringify(data);\n'
           '      }\n'
           '\n'
           '      try {\n'
           '        // Retrieve the "q" parameter in the URL fragment\n'
           "        var q = decodeURIComponent(new RegExp('[?&#]q=([^&]*)')\n"
           '            .exec(location.hash)[1]);\n'
           '\n'
           '        // Validate it (prevents trivial XSS)\n'
           '        var allowedPattern = /^[a-zA-Z0-9\\._&#=]+$/;\n'
           '        if (allowedPattern.test(q)) {\n'
           '          // The vulnerability arises because of this insecure '
           'concatenation\n'
           "          var url = '/reverseclickjacking/jsonpendpoint?q=' + q\n"
           "              + '&callback=callbackFunc';\n"
           '\n'
           '          /* Create the <script> tag that executes the JS code '
           'returned by\n'
           '           * the JSONP endpoint. */\n'
           "          var s = document.createElement('script');\n"
           "          s.type = 'text/javascript';\n"
           '          s.src = url;\n'
           '          document.body.appendChild(s);\n'
           '        }\n'
           '      } catch(e) {\n'
           "        resultDiv.textContent = 'Please specify a q parameter in "
           "the fragment.';\n"
           '      }\n'
           '  </script>\n',
  'param': '',
  'pluginId': '10027',
  'reference': '',
  'risk': 'Informational',
  'solution': 'Remove all comments that return information that may help an '
              'attacker and fix any underlying problems they refer to.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithXFO/',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '505',
  'messageId': '656',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithXFO/',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '506',
  'messageId': '674',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/jsonp?callback=foo',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '507',
  'messageId': '675',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/tags/multiline?q=a',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '508',
  'messageId': '675',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/tags/multiline?q=a',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '509',
  'messageId': '677',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/a.href',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '510',
  'messageId': '677',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/a.href',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '511',
  'messageId': '680',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/document.location',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '512',
  'messageId': '680',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/document.location',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '513',
  'messageId': '681',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/form.action',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '514',
  'messageId': '681',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/form.action',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '515',
  'messageId': '682',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/iframe.src',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '516',
  'messageId': '682',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/iframe.src',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '517',
  'messageId': '683',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/input.formaction',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '518',
  'messageId': '683',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/input.formaction',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '519',
  'messageId': '684',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/window.open',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '520',
  'messageId': '684',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/window.open',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '521',
  'messageId': '685',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/search/area.href?//example.org',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '522',
  'messageId': '685',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/search/area.href?//example.org',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '523',
  'messageId': '687',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/search/svg.a?//example.org',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '524',
  'messageId': '687',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/search/svg.a?//example.org',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '525',
  'messageId': '688',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/search/button.formaction?//example.org',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '526',
  'messageId': '688',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/search/button.formaction?//example.org',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '527',
  'messageId': '689',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/search/location.assign?//example.org',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '528',
  'messageId': '689',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/search/location.assign?//example.org',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '529',
  'messageId': '690',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/search/frame.src?//example.org',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '530',
  'messageId': '690',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/search/frame.src?//example.org',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '531',
  'messageId': '691',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/base.href',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '532',
  'messageId': '691',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/base.href',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '533',
  'messageId': '692',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/embed.src',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '534',
  'messageId': '692',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/embed.src',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '535',
  'messageId': '693',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/fetch',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '536',
  'messageId': '693',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/fetch',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '537',
  'messageId': '694',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/link.href',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '538',
  'messageId': '694',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/link.href',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '539',
  'messageId': '695',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/object.data',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '540',
  'messageId': '695',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/object.data',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '541',
  'messageId': '696',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/param.code.value',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '542',
  'messageId': '696',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/param.code.value',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '543',
  'messageId': '697',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/param.movie.value',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '544',
  'messageId': '697',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/param.movie.value',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '545',
  'messageId': '698',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/param.src.value',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '546',
  'messageId': '698',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/param.src.value',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '547',
  'messageId': '699',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/param.url.value',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '548',
  'messageId': '699',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/param.url.value',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '549',
  'messageId': '700',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/script.href',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '550',
  'messageId': '700',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/script.href',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '551',
  'messageId': '701',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/script.src',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '552',
  'messageId': '701',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/script.src',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '553',
  'messageId': '702',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/xhr.open',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '554',
  'messageId': '702',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/xhr.open',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '555',
  'messageId': '703',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_domain',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '556',
  'messageId': '703',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_domain',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '557',
  'messageId': '704',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_path',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '558',
  'messageId': '704',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_path',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '559',
  'messageId': '705',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_query',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '560',
  'messageId': '705',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_query',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '561',
  'messageId': '706',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/urldom/jsonp?callback=foobar',
  'wascid': '15'},
 {'alert': 'Cookie Without SameSite Attribute',
  'alertRef': '10054',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'A cookie has been set without the SameSite attribute, which '
                 'means that the cookie can be sent as a result of a '
                 "'cross-site' request. The SameSite attribute is an effective "
                 'counter measure to cross-site request forgery, cross-site '
                 'script inclusion, and timing attacks.',
  'evidence': 'Set-Cookie: my_secret_cookie',
  'id': '562',
  'messageId': '707',
  'method': 'GET',
  'name': 'Cookie Without SameSite Attribute',
  'other': '',
  'param': 'my_secret_cookie',
  'pluginId': '10054',
  'reference': 'https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site',
  'risk': 'Low',
  'solution': "Ensure that the SameSite attribute is set to either 'lax' or "
              "ideally 'strict' for all cookies.",
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/leakedcookie',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: my_secret_cookie',
  'id': '563',
  'messageId': '707',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'my_secret_cookie',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/leakedcookie',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '564',
  'messageId': '707',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/leakedcookie',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '565',
  'messageId': '707',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/leakedcookie',
  'wascid': '15'},
 {'alert': 'Cookie Without SameSite Attribute',
  'alertRef': '10054',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'A cookie has been set without the SameSite attribute, which '
                 'means that the cookie can be sent as a result of a '
                 "'cross-site' request. The SameSite attribute is an effective "
                 'counter measure to cross-site request forgery, cross-site '
                 'script inclusion, and timing attacks.',
  'evidence': 'Set-Cookie: my_secret_cookie',
  'id': '566',
  'messageId': '708',
  'method': 'GET',
  'name': 'Cookie Without SameSite Attribute',
  'other': '',
  'param': 'my_secret_cookie',
  'pluginId': '10054',
  'reference': 'https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site',
  'risk': 'Low',
  'solution': "Ensure that the SameSite attribute is set to either 'lax' or "
              "ideally 'strict' for all cookies.",
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/leakedinresource',
  'wascid': '13'},
 {'alert': 'Cookie Without Secure Flag',
  'alertRef': '10011',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '614',
  'description': 'A cookie has been set without the secure flag, which means '
                 'that the cookie can be accessed via unencrypted connections.',
  'evidence': 'Set-Cookie: my_secret_cookie',
  'id': '567',
  'messageId': '708',
  'method': 'GET',
  'name': 'Cookie Without Secure Flag',
  'other': '',
  'param': 'my_secret_cookie',
  'pluginId': '10011',
  'reference': 'https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html',
  'risk': 'Low',
  'solution': 'Whenever a cookie contains sensitive information or is a '
              'session token, then it should always be passed using an '
              'encrypted channel. Ensure that the secure flag is set for '
              'cookies containing such sensitive information.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/leakedinresource',
  'wascid': '13'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '568',
  'messageId': '708',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/leakedinresource',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '569',
  'messageId': '708',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/leakedinresource',
  'wascid': '15'},
 {'alert': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'alertRef': '10015',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '525',
  'description': 'The cache-control and pragma HTTP header have not been set '
                 'properly or are missing allowing the browser and proxies to '
                 'cache content.',
  'evidence': 'public, max-age=600',
  'id': '570',
  'messageId': '710',
  'method': 'GET',
  'name': 'Incomplete or No Cache-control and Pragma HTTP Header Set',
  'other': '',
  'param': 'Cache-Control',
  'pluginId': '10015',
  'reference': 'https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching',
  'risk': 'Low',
  'solution': 'Whenever possible ensure the cache-control HTTP header is set '
              'with no-cache, no-store, must-revalidate; and that the pragma '
              'HTTP header is set with no-cache.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/vulnerablelibraries/jquery.html',
  'wascid': '13'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script src="https://code.jquery.com/jquery-1.8.1.js"></script>',
  'id': '571',
  'messageId': '710',
  'method': 'GET',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': 'https://code.jquery.com/jquery-1.8.1.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/vulnerablelibraries/jquery.html',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '572',
  'messageId': '710',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/vulnerablelibraries/jquery.html',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '573',
  'messageId': '710',
  'method': 'GET',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/vulnerablelibraries/jquery.html',
  'wascid': '15'},
 {'alert': 'CSP: Wildcard Directive',
  'alertRef': '10055',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The following directives either allow wildcard sources (or '
                 'ancestors), are not defined, or are overly broadly '
                 'defined: \n'
                 'script-src, script-src-elem, script-src-attr, style-src, '
                 'style-src-elem, style-src-attr, img-src, connect-src, '
                 'frame-src, font-src, media-src, object-src, manifest-src, '
                 'worker-src, prefetch-src, form-action\n'
                 '\n'
                 'The directive(s): form-action are among the directives that '
                 'do not fallback to default-src, missing/excluding them is '
                 'the same as allowing anything.',
  'evidence': 'frame-ancestors https://google.com',
  'id': '574',
  'messageId': '712',
  'method': 'GET',
  'name': 'CSP: Wildcard Directive',
  'other': '',
  'param': 'Content-Security-Policy',
  'pluginId': '10055',
  'reference': 'http://www.w3.org/TR/CSP2/\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://caniuse.com/#search=content+security+policy\n'
               'http://content-security-policy.com/\n'
               'https://github.com/shapesecurity/salvation\n'
               'https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is properly configured to set the Content-Security-Policy '
              'header.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnocoverdomain',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '575',
  'messageId': '712',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnocoverdomain',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '576',
  'messageId': '713',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnoframeancestors',
  'wascid': '15'},
 {'alert': 'CSP: Wildcard Directive',
  'alertRef': '10055',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The following directives either allow wildcard sources (or '
                 'ancestors), are not defined, or are overly broadly '
                 'defined: \n'
                 'script-src, script-src-elem, script-src-attr, style-src, '
                 'style-src-elem, style-src-attr, img-src, connect-src, '
                 'frame-src, font-src, media-src, object-src, manifest-src, '
                 'worker-src, prefetch-src, form-action\n'
                 '\n'
                 'The directive(s): form-action are among the directives that '
                 'do not fallback to default-src, missing/excluding them is '
                 'the same as allowing anything.',
  'evidence': 'frame-ancestors https://example.com',
  'id': '577',
  'messageId': '714',
  'method': 'GET',
  'name': 'CSP: Wildcard Directive',
  'other': '',
  'param': 'Content-Security-Policy',
  'pluginId': '10055',
  'reference': 'http://www.w3.org/TR/CSP2/\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://caniuse.com/#search=content+security+policy\n'
               'http://content-security-policy.com/\n'
               'https://github.com/shapesecurity/salvation\n'
               'https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is properly configured to set the Content-Security-Policy '
              'header.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnoxfoallowfrom',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '578',
  'messageId': '714',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnoxfoallowfrom',
  'wascid': '15'},
 {'alert': 'CSP: Wildcard Directive',
  'alertRef': '10055',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The following directives either allow wildcard sources (or '
                 'ancestors), are not defined, or are overly broadly '
                 'defined: \n'
                 'script-src, script-src-elem, script-src-attr, style-src, '
                 'style-src-elem, style-src-attr, img-src, connect-src, '
                 'frame-src, font-src, media-src, object-src, manifest-src, '
                 'worker-src, prefetch-src, form-action\n'
                 '\n'
                 'The directive(s): form-action are among the directives that '
                 'do not fallback to default-src, missing/excluding them is '
                 'the same as allowing anything.',
  'evidence': "frame-ancestors 'self'",
  'id': '579',
  'messageId': '715',
  'method': 'GET',
  'name': 'CSP: Wildcard Directive',
  'other': '',
  'param': 'Content-Security-Policy',
  'pluginId': '10055',
  'reference': 'http://www.w3.org/TR/CSP2/\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://caniuse.com/#search=content+security+policy\n'
               'http://content-security-policy.com/\n'
               'https://github.com/shapesecurity/salvation\n'
               'https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is properly configured to set the Content-Security-Policy '
              'header.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsselfnoxfosameorigin',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '580',
  'messageId': '715',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsselfnoxfosameorigin',
  'wascid': '15'},
 {'alert': 'CSP: Wildcard Directive',
  'alertRef': '10055',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The following directives either allow wildcard sources (or '
                 'ancestors), are not defined, or are overly broadly '
                 'defined: \n'
                 'script-src, script-src-elem, script-src-attr, style-src, '
                 'style-src-elem, style-src-attr, img-src, connect-src, '
                 'frame-src, font-src, media-src, object-src, manifest-src, '
                 'worker-src, prefetch-src, form-action\n'
                 '\n'
                 'The directive(s): form-action are among the directives that '
                 'do not fallback to default-src, missing/excluding them is '
                 'the same as allowing anything.',
  'evidence': 'frame-ancestors https://google.com',
  'id': '581',
  'messageId': '716',
  'method': 'GET',
  'name': 'CSP: Wildcard Directive',
  'other': '',
  'param': 'Content-Security-Policy',
  'pluginId': '10055',
  'reference': 'http://www.w3.org/TR/CSP2/\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://caniuse.com/#search=content+security+policy\n'
               'http://content-security-policy.com/\n'
               'https://github.com/shapesecurity/salvation\n'
               'https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is properly configured to set the Content-Security-Policy '
              'header.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/xfosameoriginnoframeancestorsself',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '582',
  'messageId': '716',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/xfosameoriginnoframeancestorsself',
  'wascid': '15'},
 {'alert': 'CSP: Wildcard Directive',
  'alertRef': '10055',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The following directives either allow wildcard sources (or '
                 'ancestors), are not defined, or are overly broadly '
                 'defined: \n'
                 'script-src, script-src-elem, script-src-attr, style-src, '
                 'style-src-elem, style-src-attr, img-src, connect-src, '
                 'frame-src, font-src, media-src, object-src, manifest-src, '
                 'worker-src, prefetch-src, form-action\n'
                 '\n'
                 'The directive(s): form-action are among the directives that '
                 'do not fallback to default-src, missing/excluding them is '
                 'the same as allowing anything.',
  'evidence': "frame-ancestors 'none'",
  'id': '583',
  'messageId': '717',
  'method': 'GET',
  'name': 'CSP: Wildcard Directive',
  'other': '',
  'param': 'Content-Security-Policy',
  'pluginId': '10055',
  'reference': 'http://www.w3.org/TR/CSP2/\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://caniuse.com/#search=content+security+policy\n'
               'http://content-security-policy.com/\n'
               'https://github.com/shapesecurity/salvation\n'
               'https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is properly configured to set the Content-Security-Policy '
              'header.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnonenoxfodeny',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '584',
  'messageId': '717',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnonenoxfodeny',
  'wascid': '15'},
 {'alert': 'CSP: Wildcard Directive',
  'alertRef': '10055',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The following directives either allow wildcard sources (or '
                 'ancestors), are not defined, or are overly broadly '
                 'defined: \n'
                 'script-src, script-src-elem, script-src-attr, style-src, '
                 'style-src-elem, style-src-attr, img-src, connect-src, '
                 'frame-src, font-src, media-src, object-src, manifest-src, '
                 'worker-src, prefetch-src, form-action\n'
                 '\n'
                 'The directive(s): form-action are among the directives that '
                 'do not fallback to default-src, missing/excluding them is '
                 'the same as allowing anything.',
  'evidence': "frame-ancestors 'self'",
  'id': '585',
  'messageId': '718',
  'method': 'GET',
  'name': 'CSP: Wildcard Directive',
  'other': '',
  'param': 'Content-Security-Policy',
  'pluginId': '10055',
  'reference': 'http://www.w3.org/TR/CSP2/\n'
               'http://www.w3.org/TR/CSP/\n'
               'http://caniuse.com/#search=content+security+policy\n'
               'http://content-security-policy.com/\n'
               'https://github.com/shapesecurity/salvation\n'
               'https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources',
  'risk': 'Medium',
  'solution': 'Ensure that your web server, application server, load balancer, '
              'etc. is properly configured to set the Content-Security-Policy '
              'header.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/xfodenynoframeancestorsnone',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '586',
  'messageId': '718',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/invalidframingconfig/xfodenynoframeancestorsnone',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '587',
  'messageId': '719',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/array/eval',
  'wascid': '15'},
 {'alert': 'Cross-Domain JavaScript Source File Inclusion',
  'alertRef': '10017',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '829',
  'description': 'The page includes one or more script files from a '
                 'third-party domain.',
  'evidence': '<script '
              'src="//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js"></script>',
  'id': '588',
  'messageId': '723',
  'method': 'POST',
  'name': 'Cross-Domain JavaScript Source File Inclusion',
  'other': '',
  'param': '//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js',
  'pluginId': '10017',
  'reference': '',
  'risk': 'Low',
  'solution': 'Ensure JavaScript source files are loaded from only trusted '
              "sources, and the sources can't be controlled by end users of "
              'the application.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0',
  'wascid': '15'},
 {'alert': 'Absence of Anti-CSRF Tokens',
  'alertRef': '10202',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '352',
  'description': 'No Anti-CSRF tokens were found in a HTML submission form.\n'
                 'A cross-site request forgery is an attack that involves '
                 'forcing a victim to send an HTTP request to a target '
                 'destination without their knowledge or intent in order to '
                 'perform an action as the victim. The underlying cause is '
                 'application functionality using predictable URL/form actions '
                 'in a repeatable way. The nature of the attack is that CSRF '
                 'exploits the trust that a web site has for a user. By '
                 'contrast, cross-site scripting (XSS) exploits the trust that '
                 'a user has for a web site. Like XSS, CSRF attacks are not '
                 'necessarily cross-site, but they can be. Cross-site request '
                 'forgery is also known as CSRF, XSRF, one-click attack, '
                 'session riding, confused deputy, and sea surf.\n'
                 '\n'
                 'CSRF attacks are effective in a number of situations, '
                 'including:\n'
                 '    * The victim has an active session on the target site.\n'
                 '    * The victim is authenticated via HTTP auth on the '
                 'target site.\n'
                 '    * The victim is on the same local network as the target '
                 'site.\n'
                 '\n'
                 'CSRF has primarily been used to perform an action against a '
                 "target site using the victim's privileges, but recent "
                 'techniques have been discovered to disclose information by '
                 'gaining access to the response. The risk of information '
                 'disclosure is dramatically increased when the target site is '
                 'vulnerable to XSS, because XSS can be used as a platform for '
                 'CSRF, allowing the attack to operate within the bounds of '
                 'the same-origin policy.',
  'evidence': '<form action="" method="post">',
  'id': '589',
  'messageId': '723',
  'method': 'POST',
  'name': 'Absence of Anti-CSRF Tokens',
  'other': 'No known Anti-CSRF token [anticsrf, CSRFToken, '
           '__RequestVerificationToken, csrfmiddlewaretoken, '
           'authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, '
           '_csrfSecret, __csrf_magic, CSRF] was found in the following HTML '
           'form: [Form 1: "q" ].',
  'param': '',
  'pluginId': '10202',
  'reference': 'http://projects.webappsec.org/Cross-Site-Request-Forgery\n'
               'http://cwe.mitre.org/data/definitions/352.html',
  'risk': 'Low',
  'solution': 'Phase: Architecture and Design\n'
              'Use a vetted library or framework that does not allow this '
              'weakness to occur or provides constructs that make this '
              'weakness easier to avoid.\n'
              'For example, use anti-CSRF packages such as the OWASP '
              'CSRFGuard.\n'
              '\n'
              'Phase: Implementation\n'
              'Ensure that your application is free of cross-site scripting '
              'issues, because most CSRF defenses can be bypassed using '
              'attacker-controlled script.\n'
              '\n'
              'Phase: Architecture and Design\n'
              'Generate a unique nonce for each form, place the nonce into the '
              'form, and verify the nonce upon receipt of the form. Be sure '
              'that the nonce is not predictable (CWE-330).\n'
              'Note that this can be bypassed using XSS.\n'
              '\n'
              'Identify especially dangerous operations. When the user '
              'performs a dangerous operation, send a separate confirmation '
              'request to ensure that the user intended to perform that '
              'operation.\n'
              'Note that this can be bypassed using XSS.\n'
              '\n'
              'Use the ESAPI Session Management control.\n'
              'This control includes a component for CSRF.\n'
              '\n'
              'Do not use the GET method for any request that triggers a state '
              'change.\n'
              '\n'
              'Phase: Implementation\n'
              'Check the HTTP Referer header to see if the request originated '
              'from an expected page. This could break legitimate '
              'functionality, because users or proxies may have disabled '
              'sending the Referer for privacy reasons.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0',
  'wascid': '9'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '590',
  'messageId': '723',
  'method': 'POST',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '591',
  'messageId': '723',
  'method': 'POST',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '592',
  'messageId': '724',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/function/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '593',
  'messageId': '726',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/function/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '594',
  'messageId': '727',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/function/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '595',
  'messageId': '728',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/property/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '596',
  'messageId': '730',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/array/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '597',
  'messageId': '733',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/function/eval',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '598',
  'messageId': '735',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/function/innerHtml',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '599',
  'messageId': '736',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/function/documentWrite',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '600',
  'messageId': '737',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/property/documentWrite',
  'wascid': '15'},
 {'alert': 'Application Error Disclosure',
  'alertRef': '90022',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '200',
  'description': 'This page contains an error/warning message that may '
                 'disclose sensitive information like the location of the file '
                 'that produced the unhandled exception. This information can '
                 'be used to launch further attacks against the web '
                 'application. The alert could be a false positive if the '
                 'error message is found inside a documentation page.',
  'evidence': 'HTTP/1.1 500 Internal Server Error',
  'id': '601',
  'messageId': '741',
  'method': 'GET',
  'name': 'Application Error Disclosure',
  'other': '',
  'param': '',
  'pluginId': '90022',
  'reference': '',
  'risk': 'Low',
  'solution': 'Review the source code of this page. Implement custom error '
              'pages. Consider implementing a mechanism to provide a unique '
              'error reference/identifier to the client (browser) while '
              'logging the details on the server side and not exposing them to '
              'the user.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/url/a',
  'wascid': '13'},
 {'alert': 'Absence of Anti-CSRF Tokens',
  'alertRef': '10202',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '352',
  'description': 'No Anti-CSRF tokens were found in a HTML submission form.\n'
                 'A cross-site request forgery is an attack that involves '
                 'forcing a victim to send an HTTP request to a target '
                 'destination without their knowledge or intent in order to '
                 'perform an action as the victim. The underlying cause is '
                 'application functionality using predictable URL/form actions '
                 'in a repeatable way. The nature of the attack is that CSRF '
                 'exploits the trust that a web site has for a user. By '
                 'contrast, cross-site scripting (XSS) exploits the trust that '
                 'a user has for a web site. Like XSS, CSRF attacks are not '
                 'necessarily cross-site, but they can be. Cross-site request '
                 'forgery is also known as CSRF, XSRF, one-click attack, '
                 'session riding, confused deputy, and sea surf.\n'
                 '\n'
                 'CSRF attacks are effective in a number of situations, '
                 'including:\n'
                 '    * The victim has an active session on the target site.\n'
                 '    * The victim is authenticated via HTTP auth on the '
                 'target site.\n'
                 '    * The victim is on the same local network as the target '
                 'site.\n'
                 '\n'
                 'CSRF has primarily been used to perform an action against a '
                 "target site using the victim's privileges, but recent "
                 'techniques have been discovered to disclose information by '
                 'gaining access to the response. The risk of information '
                 'disclosure is dramatically increased when the target site is '
                 'vulnerable to XSS, because XSS can be used as a platform for '
                 'CSRF, allowing the attack to operate within the bounds of '
                 'the same-origin policy.',
  'evidence': '<form method="POST">',
  'id': '602',
  'messageId': '742',
  'method': 'POST',
  'name': 'Absence of Anti-CSRF Tokens',
  'other': 'No known Anti-CSRF token [anticsrf, CSRFToken, '
           '__RequestVerificationToken, csrfmiddlewaretoken, '
           'authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, '
           '_csrfSecret, __csrf_magic, CSRF] was found in the following HTML '
           'form: [Form 1: "q" ].',
  'param': '',
  'pluginId': '10202',
  'reference': 'http://projects.webappsec.org/Cross-Site-Request-Forgery\n'
               'http://cwe.mitre.org/data/definitions/352.html',
  'risk': 'Low',
  'solution': 'Phase: Architecture and Design\n'
              'Use a vetted library or framework that does not allow this '
              'weakness to occur or provides constructs that make this '
              'weakness easier to avoid.\n'
              'For example, use anti-CSRF packages such as the OWASP '
              'CSRFGuard.\n'
              '\n'
              'Phase: Implementation\n'
              'Ensure that your application is free of cross-site scripting '
              'issues, because most CSRF defenses can be bypassed using '
              'attacker-controlled script.\n'
              '\n'
              'Phase: Architecture and Design\n'
              'Generate a unique nonce for each form, place the nonce into the '
              'form, and verify the nonce upon receipt of the form. Be sure '
              'that the nonce is not predictable (CWE-330).\n'
              'Note that this can be bypassed using XSS.\n'
              '\n'
              'Identify especially dangerous operations. When the user '
              'performs a dangerous operation, send a separate confirmation '
              'request to ensure that the user intended to perform that '
              'operation.\n'
              'Note that this can be bypassed using XSS.\n'
              '\n'
              'Use the ESAPI Session Management control.\n'
              'This control includes a component for CSRF.\n'
              '\n'
              'Do not use the GET method for any request that triggers a state '
              'change.\n'
              '\n'
              'Phase: Implementation\n'
              'Check the HTTP Referer header to see if the request originated '
              'from an expected page. This could break legitimate '
              'functionality, because users or proxies may have disabled '
              'sending the Referer for privacy reasons.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/form',
  'wascid': '9'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '603',
  'messageId': '742',
  'method': 'POST',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/form',
  'wascid': '15'},
 {'alert': 'X-Frame-Options Header Not Set',
  'alertRef': '10020',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'X-Frame-Options header is not included in the HTTP response '
                 "to protect against 'ClickJacking' attacks.",
  'evidence': '',
  'id': '604',
  'messageId': '742',
  'method': 'POST',
  'name': 'X-Frame-Options Header Not Set',
  'other': '',
  'param': 'X-Frame-Options',
  'pluginId': '10020',
  'reference': 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options',
  'risk': 'Medium',
  'solution': 'Most modern Web browsers support the X-Frame-Options HTTP '
              "header. Ensure it's set on all web pages returned by your site "
              '(if you expect the page to be framed only by pages on your '
              "server (e.g. it's part of a FRAMESET) then you'll want to use "
              'SAMEORIGIN, otherwise if you never expect the page to be '
              'framed, you should use DENY. ALLOW-FROM allows specific '
              'websites to frame the web page in supported web browsers).',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reflected/parameter/form',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '605',
  'messageId': '743',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/jsonpendpoint?callback=urc_button.click&q',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '606',
  'messageId': '744',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/reverseclickjacking/jsonpendpoint?callback=foo&q',
  'wascid': '15'},
 {'alert': 'X-Content-Type-Options Header Missing',
  'alertRef': '10021',
  'attack': '',
  'confidence': 'Medium',
  'cweid': '16',
  'description': 'The Anti-MIME-Sniffing header X-Content-Type-Options was not '
                 "set to 'nosniff'. This allows older versions of Internet "
                 'Explorer and Chrome to perform MIME-sniffing on the response '
                 'body, potentially causing the response body to be '
                 'interpreted and displayed as a content type other than the '
                 'declared content type. Current (early 2014) and legacy '
                 'versions of Firefox will use the declared content type (if '
                 'one is set), rather than performing MIME-sniffing.',
  'evidence': '',
  'id': '607',
  'messageId': '745',
  'method': 'GET',
  'name': 'X-Content-Type-Options Header Missing',
  'other': 'This issue still applies to error type pages (401, 403, 500, etc.) '
           'as those pages are often still affected by injection issues, in '
           'which case there is still concern for browsers sniffing pages away '
           'from their actual content type.\n'
           'At "High" threshold this scan rule will not alert on client or '
           'server error responses.',
  'param': 'X-Content-Type-Options',
  'pluginId': '10021',
  'reference': 'http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\n'
               'https://owasp.org/www-community/Security_Headers',
  'risk': 'Low',
  'solution': 'Ensure that the application/web server sets the Content-Type '
              'header appropriately, and that it sets the '
              "X-Content-Type-Options header to 'nosniff' for all web pages.\n"
              'If possible, ensure that the end user uses a '
              'standards-compliant and modern web browser that does not '
              'perform MIME-sniffing at all, or that can be directed by the '
              'web application/web server to not perform MIME-sniffing.',
  'sourceid': '3',
  'url': 'https://public-firing-range.appspot.com/leakedcookie/leakedcookie.js',
  'wascid': '15'}]
